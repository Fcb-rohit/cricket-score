{"version":3,"sources":["components/Navbar.js","api/Api.js","components/Matches.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","AppBar","position","Toolbar","IconButton","color","Menu","Typography","variant","API_KEY","Matches","match","useState","detail","setDetail","open","setOpen","handleClick","id","url","fetch","then","response","json","catch","error","console","log","getMatchData","data","handleOpen","handleClose","Card","style","marginTop","CardContent","Grid","container","justify","alignItems","spacing","item","width","src","alt","CardActions","Button","onClick","unique_id","marginLeft","Date","dateTimeGMT","toLocaleString","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","stat","fontStyle","fontWeight","matchStarted","DialogActions","App","matches","setMatches","useEffect","getMatches","alert","className","sm","map","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c22143c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { AppBar, Toolbar, Typography, IconButton } from \"@material-ui/core\"\r\nimport { Menu } from \"@material-ui/icons\"\r\n\r\nconst Navbar=()=> {\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <IconButton color=\"inherit\">\r\n                    <Menu/>\r\n                </IconButton>\r\n                <Typography variant=\"h6\">\r\n                    Live Score\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n};\r\n\r\nexport default Navbar","const API_KEY = 'cv6E26FuloTu7k1BJY6BANnxh1D2'\r\n\r\n//get matches\r\nexport const getMatches=()=>{\r\n    const url = `https://cricapi.com/api/matches?apikey=${API_KEY}`;\r\n\r\n    return fetch(url).then((response=>response.json())).catch((error)=>console.log(\"Error :\",error));\r\n}\r\n\r\n//load match data\r\nexport const getMatchData=(id) => {\r\n    const url = `https://cricapi.com/api/cricketScore?apikey=${API_KEY}&unique_id=${id}`;\r\n\r\n    return fetch(url).then((response=>response.json())).catch((error)=>console.log(\"Error :\",error));\r\n}","import React,  { Fragment, useState } from 'react'\r\nimport { Card, CardContent, Typography, CardActions, Button, Grid, Dialog,DialogTitle,DialogContent,DialogContentText,DialogActions } from '@material-ui/core';\r\nimport  { getMatchData } from \"../api/Api\"\r\n\r\nconst Matches=({match})=> {\r\n\r\n    const [detail,setDetail] = useState({});\r\n    const [open,setOpen] = useState(false);\r\n\r\n    const handleClick = (id) =>{\r\n        getMatchData(id).then(\r\n            (data)=> { setDetail(data);\r\n                handleOpen();\r\n            })\r\n        .catch((error)=>console.log(error))\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const getDialog=()=> (\r\n        <Dialog open={open} onClose={handleClose}>\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Match Detail...\"}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    <Typography>{detail.stat}</Typography>\r\n                    <Typography>\r\n                        Match <span style={{ fontStyle:\"italic\", fontWeight: \"bold\" }}>\r\n                            {detail.matchStarted ? \"Started\" : \"Stll not started\"}{\"\"}\r\n                        </span>\r\n                    </Typography>\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose}>Close</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n\r\n    const getMatch=()=>(\r\n            <Card style={{marginTop :15}}>\r\n                <CardContent>\r\n                    <Grid container justify=\"center\" alignItems=\"center\" spacing={4}>\r\n                        <Grid item>\r\n                            <Typography variant=\"h5\">\r\n                            {match[\"team-1\"]}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                        <img style={{width:85}} src=\"img/vs.png\" alt=\"\" />\r\n                        </Grid>\r\n                        <Grid item>\r\n                        <Typography  variant=\"h5\">\r\n                            {match[\"team-2\"]}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Grid container justify=\"center\" spacing={3}>\r\n                    <Button onClick={() => {\r\n                        handleClick(match.unique_id)\r\n                    }} variant=\"contained\" color=\"primary\">Show Details</Button>\r\n                    <Button style={{marginLeft : 5}} variant=\"contained\" color=\"primary\"> Start Time {new Date(match.dateTimeGMT).toLocaleString()}</Button>\r\n                    </Grid>\r\n                </CardActions>\r\n            </Card>\r\n    )\r\n\r\n    return <Fragment>\r\n        {getMatch()}\r\n        {getDialog()}\r\n    </Fragment>\r\n}\r\n\r\nexport default Matches","import React, { useEffect,useState,Fragment } from 'react'\nimport './App.css';\nimport Navbar from \"./components/Navbar\"\nimport { getMatches } from \"./api/Api\"\nimport Matches from \"./components/Matches\"\nimport { Grid,Typography } from '@material-ui/core';\n\nfunction App() {\n\n  const [matches,setMatches] = useState([]);\n\n  useEffect(() => {\n    getMatches()\n    .then((data)=> setMatches(data.matches) )\n    .catch((error)=> alert(\"No data\"))\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Typography variant=\"h3\" style={{marginTop:20}}>Live T20 Score</Typography>\n      <Grid container>\n        <Grid sm=\"2\"></Grid>\n        <Grid sm=\"8\">\n        {\n        matches.map((match) =>(\n\n          <Fragment key={match.unique_id}>\n            {match.type === \"Twenty20\" ? (\n              <Matches key={match.unique_id} match={match}/>\n              ) : (\n                \"\"\n            )}\n          </Fragment>\n          ))}\n        </Grid>\n      </Grid>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}